A
- B
- C
		
		
A a = B.new
a.m
// is clearly a poly call

B b = B.new
b.m	
// is it a poly call ?? I filtered it out (allPolymorphicCalls_computer). 
// RULE: 
// keep two versions of the metric. One where we discard if receiver class = candidate class; and one where we count both cases (old impl.)

----------
 receiver = nil 
// It probably means that the parser was not able to go back to the actual receiver obj/class. 
// RULE: ignore. 

EXAMPLES: 
getOwner().restoreTransformTo(restoreData);
view.getDrawing().fireUndoableEditHappened(new BezierNodeEdit(f, index, oldNode, f.getNode(index)));
..

----------

A <Interface>
- B
- C
// is poly hierarchy

A <Interface>
- B
// is not poly hierarchy

A <Interface>
- B
- - C
// is poly hierarchy

A <Interface>
- B
- - C 
- - D
// is poly hierarchy
	
// RULE: discard if hierarchy.height = 2 & root.type = interface	

----------

B.m

// static calls are not poly
// RULE: discard if receiver.type = class

-----------

overridingMethods

	| overs |
	overs := OrderedCollection new.
	self belongsTo subclassHierarchyGroupModel 
		do: [:cls | overs addAll: (cls methods select: [:met | met name = self name])].
	^overs

// RULE: compare the whole signature